/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arduinosocket;

import gnu.io.CommPortIdentifier;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Enumeration;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author mateus
 */
public class mainConnFrame extends javax.swing.JFrame implements Runnable {

    private static Socket socket1;
    public static BufferedReader in1;
    public static PrintWriter out1;
    public static BufferedReader inReader1;
    public static String mensagemEnviar1;
    Thread mythread;
    private boolean isPreMOTADI;
    private boolean isPreMOTAES;
    private boolean isPreMOTBDI;
    private boolean isPreMOTBES;
    private boolean isPreMOTCDI;
    private boolean isPreMOTCES;
    private boolean isPreMOTDDI;
    private boolean isPreMOTDES;
    private boolean isPreMOTEDI;
    private boolean isPreMOTEES;
    DefaultListModel modelo;
    DefaultListModel rate;
    logForm log;
    enviaDados sentWifi;
    ControlePorta sentSerial;

    /**
     * Creates new form mainConnFrame
     */
    public mainConnFrame() {
        modelosListas();
        initComponents();
        setJSlider();
        setBoundsComponents();
        jtfIP.setText("192.168.43.115");
        jtfPorta.setText("8017");
        jtfIP.grabFocus();
        log = new logForm();
        log.setVisible(true);
        jList2.setVisible(false);
    }
    
    private void modelosListas(){
               modelo = new DefaultListModel();
        rate = new DefaultListModel();
        String um = "9600";
        String dois = "19200";
        String tres = "38400";
        String quatro = "57600";
        String cinco = "74880";
        String seis = "115200";
        rate.addElement(um);
        rate.addElement(dois);
        rate.addElement(tres);
        rate.addElement(quatro);
        rate.addElement(cinco);
        rate.addElement(seis);
    }

    public void portSearch() {
        Enumeration listaDePortas = CommPortIdentifier.getPortIdentifiers();
        modelo.removeAllElements();
        while (listaDePortas.hasMoreElements()) {
            CommPortIdentifier ips = (CommPortIdentifier) listaDePortas.nextElement();
            System.out.println(ips.getName());
            modelo.addElement(ips.getName());
        }
    }

    public void setTextLog(String oldLog) {
        log.textLog(oldLog);
    }

    private void setBoundsComponents() {
        Font font = new Font("Courier", Font.BOLD, 12);
        jlBraco.add(jbMADI);
        jlBraco.add(jbMAES);
        jlBraco.add(jbMBDI);
        jlBraco.add(jbMBES);
        jlBraco.add(jbMCDI);
        jlBraco.add(jbMCES);
        jlBraco.add(jbMDDI);
        jlBraco.add(jbMDES);
        jlBraco.add(jbMOTEDI);
        jlBraco.add(jbMOTEES);
        jlBraco.add(jlFiguraMA);
        jlBraco.add(jlFiguraMB);
        jlBraco.add(jlFiguraMC);
        jlBraco.add(jlFiguraMD);
        jlBraco.add(jlFiguraME);
        jlFiguraMA.setBounds(46, 207, 200, 20);
        jlFiguraMA.setText("MOTOR A (GARRA)");
        jlFiguraMA.setFont(font);
        jlFiguraMB.setBounds(269, 207, 200, 20);
        jlFiguraMB.setText("MOTOR B");
        jlFiguraMB.setFont(font);
        jlFiguraMC.setBounds(335, 294, 200, 20);
        jlFiguraMC.setText("MOTOR C");
        jlFiguraMC.setFont(font);
        jlFiguraMD.setBounds(185, 449, 200, 20);
        jlFiguraMD.setText("MOTOR D");
        jlFiguraMD.setFont(font);
        jlFiguraME.setBounds(165, 525, 200, 20);
        jlFiguraME.setText("MOTOR E (BASE)");
        jlFiguraME.setFont(font);
        jbMAES.setBounds(46, 182, 50, 25);
        jbMADI.setBounds(97, 182, 50, 25);
        jbMBES.setBounds(264, 182, 50, 25);
        jbMBDI.setBounds(315, 182, 50, 25);
        jbMCES.setBounds(330, 269, 50, 25);
        jbMCDI.setBounds(381, 269, 50, 25);
        jbMDES.setBounds(182, 424, 50, 25);
        jbMDDI.setBounds(233, 424, 50, 25);
        jbMOTEES.setBounds(172, 500, 50, 25);
        jbMOTEDI.setBounds(223, 500, 50, 25);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jbMADI = new javax.swing.JButton();
        jpVel = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jlM1 = new javax.swing.JLabel();
        jlM2 = new javax.swing.JLabel();
        jlm3 = new javax.swing.JLabel();
        jlM4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jbMotorA = new javax.swing.JButton();
        jbMotorB = new javax.swing.JButton();
        jbMotorC = new javax.swing.JButton();
        jbMotorD = new javax.swing.JButton();
        jbVelMOTE = new javax.swing.JButton();
        jSlider5 = new javax.swing.JSlider();
        jlM5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jtfIP = new javax.swing.JTextField();
        jlIP = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtfPorta = new javax.swing.JTextField();
        jbConectar = new javax.swing.JButton();
        jbDesconectar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jbMAES = new javax.swing.JButton();
        jlBraco = new javax.swing.JLabel();
        jbMBES = new javax.swing.JButton();
        jbMBDI = new javax.swing.JButton();
        jbMCES = new javax.swing.JButton();
        jbMCDI = new javax.swing.JButton();
        jbMDES = new javax.swing.JButton();
        jbMDDI = new javax.swing.JButton();
        jbNewWindow = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jbLedOn = new javax.swing.JButton();
        jbLedOff = new javax.swing.JButton();
        jbLogOnOff = new javax.swing.JButton();
        jbMOTEES = new javax.swing.JButton();
        jbMOTEDI = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jlFiguraMA = new javax.swing.JLabel();
        jlFiguraMB = new javax.swing.JLabel();
        jlFiguraMC = new javax.swing.JLabel();
        jlFiguraMD = new javax.swing.JLabel();
        jlFiguraME = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Braço Robótico WIFI");
        setResizable(false);

        jbMADI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/direita.png"))); // NOI18N
        jbMADI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMADIMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMADIMouseReleased(evt);
            }
        });

        jpVel.setBorder(javax.swing.BorderFactory.createTitledBorder("Velocidades"));

        jlM1.setText("jLabel1");

        jlM2.setText("jLabel2");

        jlm3.setText("jLabel3");

        jlM4.setText("jLabel4");

        jbMotorA.setText("Motor A");
        jbMotorA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMotorAActionPerformed(evt);
            }
        });

        jbMotorB.setText("Motor B");
        jbMotorB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMotorBActionPerformed(evt);
            }
        });

        jbMotorC.setText("Motor C");
        jbMotorC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMotorCActionPerformed(evt);
            }
        });

        jbMotorD.setText("Motor D");
        jbMotorD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMotorDActionPerformed(evt);
            }
        });

        jbVelMOTE.setText("Motor E");
        jbVelMOTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVelMOTEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbVelMOTE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbMotorA)
                    .addComponent(jbMotorB)
                    .addComponent(jbMotorC)
                    .addComponent(jbMotorD))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jbMotorA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbMotorB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbMotorC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbMotorD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbVelMOTE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlM5.setText("jLabel2");

        javax.swing.GroupLayout jpVelLayout = new javax.swing.GroupLayout(jpVel);
        jpVel.setLayout(jpVelLayout);
        jpVelLayout.setHorizontalGroup(
            jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpVelLayout.createSequentialGroup()
                        .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpVelLayout.createSequentialGroup()
                                .addComponent(jlM4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33))
                            .addComponent(jlm3)))
                    .addGroup(jpVelLayout.createSequentialGroup()
                        .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpVelLayout.createSequentialGroup()
                                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlM1)
                                    .addComponent(jlM2)))
                            .addGroup(jpVelLayout.createSequentialGroup()
                                .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlM5)))
                        .addGap(50, 50, 50)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpVelLayout.setVerticalGroup(
            jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlM1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlM2))
                .addGap(18, 18, 18)
                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlm3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlM4))
                .addGap(18, 18, 18)
                .addGroup(jpVelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlM5))
                .addContainerGap(39, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Conectar"));

        jtfIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfIPKeyPressed(evt);
            }
        });

        jlIP.setText("IP:");

        jLabel1.setText("Porta:");

        jtfPorta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPortaKeyPressed(evt);
            }
        });

        jbConectar.setText("Conectar");
        jbConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConectarActionPerformed(evt);
            }
        });
        jbConectar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbConectarKeyPressed(evt);
            }
        });

        jbDesconectar.setText("Desconectar");
        jbDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDesconectarActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "WIFI", "Serial" }));
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComboBox1MouseEntered(evt);
            }
        });

        jList1.setModel(modelo);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jList1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(rate);
        jScrollPane2.setViewportView(jList2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jlIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfIP, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbConectar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbDesconectar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlIP)
                        .addComponent(jtfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbConectar)
                            .addComponent(jbDesconectar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbMAES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/esquerda.png"))); // NOI18N
        jbMAES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMAESMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMAESMouseReleased(evt);
            }
        });

        jlBraco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/teste.jpg"))); // NOI18N

        jbMBES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/esquerda.png"))); // NOI18N
        jbMBES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMBESMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMBESMouseReleased(evt);
            }
        });

        jbMBDI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/direita.png"))); // NOI18N
        jbMBDI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMBDIMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMBDIMouseReleased(evt);
            }
        });

        jbMCES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/esquerda.png"))); // NOI18N
        jbMCES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMCESMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMCESMouseReleased(evt);
            }
        });

        jbMCDI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/direita.png"))); // NOI18N
        jbMCDI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMCDIMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMCDIMouseReleased(evt);
            }
        });

        jbMDES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/esquerda.png"))); // NOI18N
        jbMDES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMDESMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMDESMouseReleased(evt);
            }
        });

        jbMDDI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/direita.png"))); // NOI18N
        jbMDDI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMDDIMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMDDIMouseReleased(evt);
            }
        });

        jbNewWindow.setText("New Window");
        jbNewWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNewWindowActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jbLedOn.setText("LED ON");
        jbLedOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLedOnActionPerformed(evt);
            }
        });

        jbLedOff.setText("LED OFF");
        jbLedOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLedOffActionPerformed(evt);
            }
        });

        jbLogOnOff.setText("Log ON/OFF");
        jbLogOnOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLogOnOffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbLedOn)
                .addGap(40, 40, 40)
                .addComponent(jbLedOff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbLogOnOff)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbLedOn)
                .addComponent(jbLedOff)
                .addComponent(jbLogOnOff))
        );

        jbMOTEES.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/esquerda.png"))); // NOI18N
        jbMOTEES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMOTEESMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMOTEESMouseReleased(evt);
            }
        });

        jbMOTEDI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/direita.png"))); // NOI18N
        jbMOTEDI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbMOTEDIMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jbMOTEDIMouseReleased(evt);
            }
        });

        jlFiguraMA.setText("jLabel2");

        jlFiguraMB.setText("jLabel3");

        jlFiguraMC.setText("jLabel4");

        jlFiguraMD.setText("jLabel5");

        jlFiguraME.setText("jLabel6");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 75, Short.MAX_VALUE)
                        .addComponent(jlBraco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jpVel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 6, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jlFiguraMC, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jlFiguraMA, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jlFiguraMB, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jlFiguraMD)
                                    .addComponent(jlFiguraME))
                                .addGap(105, 105, 105)
                                .addComponent(jbNewWindow)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbMAES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMADI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMBES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMBDI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMCES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMCDI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMDES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMDDI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbMOTEES)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbMOTEDI)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator4)
                            .addComponent(jlBraco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbMAES)
                            .addComponent(jbMADI)
                            .addComponent(jbMBES)
                            .addComponent(jbMBDI)
                            .addComponent(jbMCES)
                            .addComponent(jbMCDI)
                            .addComponent(jbMDES)
                            .addComponent(jbMDDI)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbMOTEDI)
                                    .addComponent(jbMOTEES))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jpVel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlFiguraME)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlFiguraMD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlFiguraMA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlFiguraMC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlFiguraMB)
                                .addGap(71, 71, 71))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbNewWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbMADIMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMADIMouseReleased
        isPreMOTADI = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMADIMouseReleased

    private void jbMADIMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMADIMousePressed
        mythread = new Thread(this, "isPreMOTADI");
        isPreMOTADI = true;
        mythread.start();
    }//GEN-LAST:event_jbMADIMousePressed

    private void jbMotorAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMotorAActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            if (jSlider1.getValue() == 0) {
                sentWifi.enviaDadosArduino("-VELMOTA0" + String.valueOf(jSlider1.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider1.getValue() > 1 && jSlider1.getValue() < 10) {
                sentWifi.enviaDadosArduino("-VELMOTA0" + String.valueOf((jSlider1.getValue() - 1)) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider1.getValue() > 10) {
                sentWifi.enviaDadosArduino("-VELMOTA" + String.valueOf((jSlider1.getValue()) - 1) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else {
                sentWifi.enviaDadosArduino("-VELMOTA" + String.valueOf(jSlider1.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            }
            jlM1.setText(String.valueOf(jSlider1.getValue()));
            log.textLog("A velocidade do motor A foi alterada");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMotorAActionPerformed

    private void jbMotorBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMotorBActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            if (jSlider2.getValue() == 0) {
                sentWifi.enviaDadosArduino("-VELMOTB0" + String.valueOf(jSlider2.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider2.getValue() > 1 && jSlider2.getValue() < 10) {
                sentWifi.enviaDadosArduino("-VELMOTB0" + String.valueOf((jSlider2.getValue() - 1)) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider2.getValue() > 10) {
                sentWifi.enviaDadosArduino("-VELMOTB" + String.valueOf((jSlider2.getValue()) - 1) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else {
                sentWifi.enviaDadosArduino("-VELMOTB" + String.valueOf(jSlider2.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            }
            jlM2.setText(String.valueOf(jSlider2.getValue()));
            log.textLog("A velocidade do motor B foi alterada");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }

    }//GEN-LAST:event_jbMotorBActionPerformed

    private void jbMotorCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMotorCActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            if (jSlider3.getValue() == 0) {
                sentWifi.enviaDadosArduino("-VELMOTC0" + String.valueOf(jSlider3.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider3.getValue() > 1 && jSlider3.getValue() < 10) {
                sentWifi.enviaDadosArduino("-VELMOTC0" + String.valueOf((jSlider3.getValue() - 1)) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider3.getValue() > 10) {
                sentWifi.enviaDadosArduino("-VELMOTC" + String.valueOf((jSlider3.getValue()) - 1) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else {
                sentWifi.enviaDadosArduino("-VELMOTC" + String.valueOf(jSlider3.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            }
            jlm3.setText(String.valueOf(jSlider3.getValue()));
            log.textLog("A velocidade do motor C foi alterada");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }

    }//GEN-LAST:event_jbMotorCActionPerformed

    private void jbMotorDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMotorDActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            if (jSlider4.getValue() == 0) {
                sentWifi.enviaDadosArduino("-VELMOTD0" + String.valueOf(jSlider4.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider4.getValue() > 1 && jSlider4.getValue() < 10) {
                sentWifi.enviaDadosArduino("-VELMOTD0" + String.valueOf((jSlider4.getValue() - 1)) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider4.getValue() > 10) {
                sentWifi.enviaDadosArduino("-VELMOTD" + String.valueOf((jSlider4.getValue()) - 1) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else {
                sentWifi.enviaDadosArduino("-VELMOTD" + String.valueOf(jSlider4.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            }
            jlM4.setText(String.valueOf(jSlider4.getValue()));
            log.textLog("A velocidade do motor C foi alterada");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMotorDActionPerformed

    private void jbMAESMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMAESMousePressed
        mythread = new Thread(this, "isPreMOTAES");
        isPreMOTAES = true;
        mythread.start();
    }//GEN-LAST:event_jbMAESMousePressed

    private void jbMAESMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMAESMouseReleased
        isPreMOTAES = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }

    }//GEN-LAST:event_jbMAESMouseReleased

    private void jbMBESMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMBESMousePressed
        mythread = new Thread(this, "isPreMOTBES");
        isPreMOTBES = true;
        mythread.start();
    }//GEN-LAST:event_jbMBESMousePressed

    private void jbMBESMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMBESMouseReleased
        isPreMOTBES = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMBESMouseReleased

    private void jbMBDIMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMBDIMousePressed
        mythread = new Thread(this, "isPreMOTBDI");
        isPreMOTBDI = true;
        mythread.start();
    }//GEN-LAST:event_jbMBDIMousePressed

    private void jbMBDIMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMBDIMouseReleased
        isPreMOTBDI = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMBDIMouseReleased

    private void jbMCESMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMCESMousePressed
        mythread = new Thread(this, "isPreMOTCES");
        isPreMOTCES = true;
        mythread.start();
    }//GEN-LAST:event_jbMCESMousePressed

    private void jbMCESMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMCESMouseReleased
        isPreMOTCES = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMCESMouseReleased

    private void jbMCDIMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMCDIMousePressed
        mythread = new Thread(this, "isPreMOTCDI");
        isPreMOTCDI = true;
        mythread.start();
    }//GEN-LAST:event_jbMCDIMousePressed

    private void jbMCDIMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMCDIMouseReleased
        isPreMOTCDI = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMCDIMouseReleased

    private void jbMDESMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMDESMousePressed
        mythread = new Thread(this, "isPreMOTDES");
        isPreMOTDES = true;
        mythread.start();
    }//GEN-LAST:event_jbMDESMousePressed

    private void jbMDESMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMDESMouseReleased
        isPreMOTDES = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMDESMouseReleased

    private void jbMDDIMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMDDIMousePressed
        mythread = new Thread(this, "isPreMOTDDI");
        isPreMOTDDI = true;
        mythread.start();
    }//GEN-LAST:event_jbMDDIMousePressed

    private void jbMDDIMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMDDIMouseReleased
        isPreMOTDDI = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMDDIMouseReleased

    private void jbNewWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNewWindowActionPerformed
        try {
            this.setVisible(false);
            Thread.sleep(400);
            mainConnFrame z = new mainConnFrame();
            z.setVisible(true);
            log.textLog("Nova Janela");
            this.log.setVisible(false);
            z.setTextLog(log.getLogText());
        } catch (Exception ex) {
            ex.printStackTrace();
            log.textLog(ex.toString());
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbNewWindowActionPerformed

    private void jbLedOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLedOnActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
sentWifi.enviaDadosArduino("-ONLI*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbLedOnActionPerformed

    private void jbLedOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLedOffActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
sentWifi.enviaDadosArduino("-OFFLI*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbLedOffActionPerformed

    private void jbMOTEESMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMOTEESMousePressed
        mythread = new Thread(this, "isPreMOTEES");
        isPreMOTEES = true;
        mythread.start();
    }//GEN-LAST:event_jbMOTEESMousePressed

    private void jbMOTEESMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMOTEESMouseReleased
        isPreMOTEES = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMOTEESMouseReleased

    private void jbMOTEDIMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMOTEDIMousePressed
        mythread = new Thread(this, "isPreMOTEDI");
        isPreMOTEDI = true;
        mythread.start();
    }//GEN-LAST:event_jbMOTEDIMousePressed

    private void jbMOTEDIMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbMOTEDIMouseReleased
        isPreMOTEDI = false;
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            sentWifi.enviaDadosArduino("-STOP*");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbMOTEDIMouseReleased

    private void jbVelMOTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVelMOTEActionPerformed
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            if (jSlider5.getValue() == 0) {
                sentWifi.enviaDadosArduino("-VELMOTE0" + String.valueOf(jSlider5.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider5.getValue() > 1 && jSlider5.getValue() < 10) {
                sentWifi.enviaDadosArduino("-VELMOTE0" + String.valueOf((jSlider5.getValue() - 1)) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else if (jSlider5.getValue() > 10) {
                sentWifi.enviaDadosArduino("-VELMOTE" + String.valueOf((jSlider5.getValue()) - 1) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            } else {
                sentWifi.enviaDadosArduino("-VELMOTE" + String.valueOf(jSlider5.getValue()) + "*"); //DADOS A SEREM ENVIADOR PARA O ARDUINO
            }
            jlM5.setText(String.valueOf(jSlider5.getValue()));
            log.textLog("A velocidade do motor C foi alterada");
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            sentSerial.enviaDados(21);
        }
    }//GEN-LAST:event_jbVelMOTEActionPerformed

    private void jbLogOnOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLogOnOffActionPerformed
        if (log.isVisible()) {
            log.setVisible(false);
        } else {
            log.setVisible(true);
        }
    }//GEN-LAST:event_jbLogOnOffActionPerformed

    private void jComboBox1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseEntered
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            portSearch();
        } else {
            modelo.removeAllElements();
        }
    }//GEN-LAST:event_jComboBox1MouseEntered

    private void jbDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDesconectarActionPerformed

    }//GEN-LAST:event_jbDesconectarActionPerformed

    private void jbConectarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbConectarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbConectarActionPerformed(null);
        }
    }//GEN-LAST:event_jbConectarKeyPressed

    private void jbConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConectarActionPerformed
        System.out.println(jComboBox1.getSelectedItem().toString());
        if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
            System.out.println("Contem");
            if (!jtfIP.getText().isEmpty() && !jtfPorta.getText().isEmpty()) {
                                System.out.println("Vai criar");
                sentWifi = new enviaDados(jtfIP.getText(), jtfPorta.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Campo vazio!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
            if (jList1.getSelectedValue().toString().contains("COM")) {
                sentSerial = new ControlePorta(jList1.getSelectedValue().toString(), 200);
            } else {
                JOptionPane.showMessageDialog(null, "Selecione uma porta COM!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbConectarActionPerformed

    private void jtfPortaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPortaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbConectarActionPerformed(null);
        }
    }//GEN-LAST:event_jtfPortaKeyPressed

    private void jtfIPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfIPKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtfPorta.grabFocus();
        }
    }//GEN-LAST:event_jtfIPKeyPressed

    private void jList1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseEntered
       jList2.setVisible(true);
    }//GEN-LAST:event_jList1MouseEntered
    /**
     * private void newSocket() { try { if (!jtfIP.getText().isEmpty() &&
     * !jtfPorta.getText().isEmpty()) {
     *
     * String nomeServidor1 = jtfIP.getText(); //IP DO SERVIDOR AQUI (ARDUINO)
     * String numeroPorta1 = jtfPorta.getText(); //PORTA DE CONEXÃO
     *
     * socket1 = new Socket(nomeServidor1, Integer.parseInt(numeroPorta1)); if
     * (!socket1.isClosed()) { JOptionPane.showMessageDialog(null, "Conectado
     * com Sucesso!", "Conexão Aceita", JOptionPane.INFORMATION_MESSAGE); } }
     * else { JOptionPane.showMessageDialog(null, "Preencha os campos de
     * conexão!", "Campo Vazio", JOptionPane.ERROR_MESSAGE); } } catch
     * (Exception ex) { JOptionPane.showMessageDialog(null, ex.getMessage(),
     * "Conexão", JOptionPane.ERROR_MESSAGE); ex.printStackTrace(); } }
     */

    public void setJSlider() {
        jSlider1.setMaximum(100);
        jSlider1.setMinimum(0);
        jSlider1.setValue(100);
        jlM1.setText(String.valueOf(jSlider1.getValue()));

        jSlider2.setMaximum(100);
        jSlider2.setMinimum(0);
        jSlider2.setValue(100);
        jlM2.setText(String.valueOf(jSlider2.getValue()));

        jSlider3.setMaximum(100);
        jSlider3.setMinimum(0);
        jSlider3.setValue(100);
        jlm3.setText(String.valueOf(jSlider3.getValue()));

        jSlider4.setMaximum(100);
        jSlider4.setMinimum(0);
        jSlider4.setValue(100);
        jlM4.setText(String.valueOf(jSlider4.getValue()));

        jSlider5.setMaximum(100);
        jSlider5.setMinimum(0);
        jSlider5.setValue(100);
        jlM5.setText(String.valueOf(jSlider5.getValue()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainConnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainConnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainConnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainConnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainConnFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JButton jbConectar;
    private javax.swing.JButton jbDesconectar;
    private javax.swing.JButton jbLedOff;
    private javax.swing.JButton jbLedOn;
    private javax.swing.JButton jbLogOnOff;
    private javax.swing.JButton jbMADI;
    private javax.swing.JButton jbMAES;
    private javax.swing.JButton jbMBDI;
    private javax.swing.JButton jbMBES;
    private javax.swing.JButton jbMCDI;
    private javax.swing.JButton jbMCES;
    private javax.swing.JButton jbMDDI;
    private javax.swing.JButton jbMDES;
    private javax.swing.JButton jbMOTEDI;
    private javax.swing.JButton jbMOTEES;
    private javax.swing.JButton jbMotorA;
    private javax.swing.JButton jbMotorB;
    private javax.swing.JButton jbMotorC;
    private javax.swing.JButton jbMotorD;
    private javax.swing.JButton jbNewWindow;
    private javax.swing.JButton jbVelMOTE;
    private javax.swing.JLabel jlBraco;
    private javax.swing.JLabel jlFiguraMA;
    private javax.swing.JLabel jlFiguraMB;
    private javax.swing.JLabel jlFiguraMC;
    private javax.swing.JLabel jlFiguraMD;
    private javax.swing.JLabel jlFiguraME;
    private javax.swing.JLabel jlIP;
    private javax.swing.JLabel jlM1;
    private javax.swing.JLabel jlM2;
    private javax.swing.JLabel jlM4;
    private javax.swing.JLabel jlM5;
    private javax.swing.JLabel jlm3;
    private javax.swing.JPanel jpVel;
    private javax.swing.JTextField jtfIP;
    private javax.swing.JTextField jtfPorta;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            while (isPreMOTAES) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTAES*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTADI) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTADI*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTBDI) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTBDI*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTBES) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTBES*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTCDI) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTCDI*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTCES) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTCES*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTDDI) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTDDI*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTDES) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTDES*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTEDI) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTEDI*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
            while (isPreMOTEES) {
                if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("WIFI")) {
                    sentWifi.enviaDadosArduino("-MOTEES*");
                } else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Serial")) {
                    sentSerial.enviaDados(21);
                }
                Thread.sleep(1500);
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            log.textLog(ex.toString());
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
}
